% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/y_interp_gen.R, R/y_interp_kappa.R
\name{y_interp_gen}
\alias{y_interp_gen}
\alias{y_interp_gen_inv}
\alias{y_interp_kappa}
\alias{y_interp_kappa_D1}
\alias{y_interp_kappa_inv}
\title{Interpolating Functions}
\usage{
y_interp_gen(x, eta, alpha)

y_interp_gen_inv(p, eta, alpha)

y_interp_kappa(x, eta, alpha)

y_interp_kappa_D1(x, eta, alpha)

y_interp_kappa_inv(p, eta, alpha)
}
\arguments{
\item{x}{Vector of values >=0 to evaluate the function at.}

\item{eta}{Vector of values >0 of the interpolating parameter.}

\item{alpha}{Vector of values >0 corresponding to the \eqn{alpha} parameter
of the IGL generating function.}

\item{p}{Vector of values between 0 and 1 (inclusive) to
evaluate the inverse function at.}
}
\description{
These interpolating functions
depend on a generating function (of a DJ copula).
\code{y_interp_gen()} uses the IGL generating function \eqn{\Psi_k};
\code{y_interp_kappa()} uses the "kappa transform" of that same function.
}
\details{
Appending \verb{_inv} to the function name indicates inverse with
respect to the first argument. Appending \verb{_D1} indicates
derivative with respect to the first argument. Function arguments
and parameters are vectorized.
}
